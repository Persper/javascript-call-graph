'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderSlot = renderSlot;

var _index = require('core/util/index');

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot(name, fallback, props, bindObject) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes = void 0;
  if (scopedSlotFn) {
    // scoped slot
    props = props || {};
    if (bindObject) {
      if (process.env.NODE_ENV !== 'production' && !(0, _index.isObject)(bindObject)) {
        (0, _index.warn)('slot v-bind without argument expects an Object', this);
      }
      props = (0, _index.extend)((0, _index.extend)({}, bindObject), props);
    }
    nodes = scopedSlotFn(props) || fallback;
  } else {
    var slotNodes = this.$slots[name];
    // warn duplicate slot usage
    if (slotNodes) {
      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {
        (0, _index.warn)('Duplicate presence of slot "' + name + '" found in the same render tree ' + '- this will likely cause render errors.', this);
      }
      slotNodes._rendered = true;
    }
    nodes = slotNodes || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes);
  } else {
    return nodes;
  }
}

