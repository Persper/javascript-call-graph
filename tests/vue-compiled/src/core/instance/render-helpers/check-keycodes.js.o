'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.checkKeyCodes = checkKeyCodes;

var _config = require('core/config');

var _config2 = _interopRequireDefault(_config);

var _util = require('shared/util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function isKeyNotMatch(expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1;
  } else {
    return expect !== actual;
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {
  var mappedKeyCode = _config2.default.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !_config2.default.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName);
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode);
  } else if (eventKeyName) {
    return (0, _util.hyphenate)(eventKeyName) !== key;
  }
}

