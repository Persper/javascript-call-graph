'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _textParser = require('compiler/parser/text-parser');

var _helpers = require('compiler/helpers');

function transformNode(el, options) {
  var warn = options.warn || _helpers.baseWarn;
  var staticClass = (0, _helpers.getAndRemoveAttr)(el, 'class');
  if (process.env.NODE_ENV !== 'production' && staticClass) {
    var res = (0, _textParser.parseText)(staticClass, options.delimiters);
    if (res) {
      warn('class="' + staticClass + '": ' + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div class="{{ val }}">, use <div :class="val">.');
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = (0, _helpers.getBindingAttr)(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData(el) {
  var data = '';
  if (el.staticClass) {
    data += 'staticClass:' + el.staticClass + ',';
  }
  if (el.classBinding) {
    data += 'class:' + el.classBinding + ',';
  }
  return data;
}

exports.default = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
};

