'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _textParser = require('compiler/parser/text-parser');

var _style = require('web/util/style');

var _helpers = require('compiler/helpers');

function transformNode(el, options) {
  var warn = options.warn || _helpers.baseWarn;
  var staticStyle = (0, _helpers.getAndRemoveAttr)(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (process.env.NODE_ENV !== 'production') {
      var res = (0, _textParser.parseText)(staticStyle, options.delimiters);
      if (res) {
        warn('style="' + staticStyle + '": ' + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div style="{{ val }}">, use <div :style="val">.');
      }
    }
    el.staticStyle = JSON.stringify((0, _style.parseStyleText)(staticStyle));
  }

  var styleBinding = (0, _helpers.getBindingAttr)(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData(el) {
  var data = '';
  if (el.staticStyle) {
    data += 'staticStyle:' + el.staticStyle + ',';
  }
  if (el.styleBinding) {
    data += 'style:(' + el.styleBinding + '),';
  }
  return data;
}

exports.default = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode,
  genData: genData
};

