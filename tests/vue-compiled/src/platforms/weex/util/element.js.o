'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isUnaryTag = exports.isRuntimeComponent = exports.canBeLeftOpenTag = exports.isReservedTag = undefined;
exports.mustUseProp = mustUseProp;
exports.getTagNamespace = getTagNamespace;
exports.isUnknownElement = isUnknownElement;
exports.query = query;

var _util = require('shared/util');

var isReservedTag = exports.isReservedTag = (0, _util.makeMap)('template,script,style,element,content,slot,link,meta,svg,view,' + 'a,div,img,image,text,span,input,switch,textarea,spinner,select,' + 'slider,slider-neighbor,indicator,canvas,' + 'list,cell,header,loading,loading-indicator,refresh,scrollable,scroller,' + 'video,web,embed,tabbar,tabheader,datepicker,timepicker,marquee,countdown', true);

// Elements that you can, intentionally, leave open (and which close themselves)
// more flexible than web


// These util functions are split into its own file because Rollup cannot drop
// makeMap() due to potential side effects, so these variables end up
// bloating the web builds.

var canBeLeftOpenTag = exports.canBeLeftOpenTag = (0, _util.makeMap)('web,spinner,switch,video,textarea,canvas,' + 'indicator,marquee,countdown', true);

var isRuntimeComponent = exports.isRuntimeComponent = (0, _util.makeMap)('richtext,transition,transition-group', true);

var isUnaryTag = exports.isUnaryTag = (0, _util.makeMap)('embed,img,image,input,link,meta', true);

function mustUseProp(tag, type, name) {
  return false;
}

function getTagNamespace(tag) {}

function isUnknownElement(tag) {
  return false;
}

function query(el, document) {
  // document is injected by weex factory wrapper
  var placeholder = document.createComment('root');
  placeholder.hasAttribute = placeholder.removeAttribute = function () {}; // hack for patch
  document.documentElement.appendChild(placeholder);
  return placeholder;
}

