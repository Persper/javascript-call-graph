'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RECYCLE_LIST_MARKER = undefined;
exports.registerComponentHook = registerComponentHook;
exports.updateComponentData = updateComponentData;

var _index = require('core/util/index');

var RECYCLE_LIST_MARKER = exports.RECYCLE_LIST_MARKER = '@inRecycleList';

// Register the component hook to weex native render engine.
// The hook will be triggered by native, not javascript.
function registerComponentHook(componentId, type, // hook type, could be "lifecycle" or "instance"
hook, // hook name
fn) {
  if (!document || !document.taskCenter) {
    (0, _index.warn)('Can\'t find available "document" or "taskCenter".');
    return;
  }
  if (typeof document.taskCenter.registerHook === 'function') {
    return document.taskCenter.registerHook(componentId, type, hook, fn);
  }
  (0, _index.warn)('Failed to register component hook "' + type + '@' + hook + '#' + componentId + '".');
}

// Updates the state of the component to weex native render engine.
function updateComponentData(componentId, newData, callback) {
  if (!document || !document.taskCenter) {
    (0, _index.warn)('Can\'t find available "document" or "taskCenter".');
    return;
  }
  if (typeof document.taskCenter.updateData === 'function') {
    return document.taskCenter.updateData(componentId, newData, callback);
  }
  (0, _index.warn)('Failed to update component data (' + componentId + ').');
}

