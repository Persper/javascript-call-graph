'use strict';

var _weexTemplateCompiler = require('../../../packages/weex-template-compiler');

var _index = require('../helpers/index');

describe('append props', function () {
  it('add append="tree" on <cell>', function () {
    var _compile = (0, _weexTemplateCompiler.compile)('<list><cell></cell></list>'),
        render = _compile.render,
        staticRenderFns = _compile.staticRenderFns,
        errors = _compile.errors;

    expect(render).not.toBeUndefined();
    expect(staticRenderFns).not.toBeUndefined();
    expect(staticRenderFns.length).toEqual(1);
    expect(staticRenderFns).toMatch((0, _index.strToRegExp)('appendAsTree:true'));
    expect(staticRenderFns).toMatch((0, _index.strToRegExp)('attrs:{"append":"tree"}'));
    expect(errors).toEqual([]);
  });

  it('override append="node" on <cell>', function () {
    var _compile2 = (0, _weexTemplateCompiler.compile)('<list><cell append="node"></cell></list>'),
        render = _compile2.render,
        staticRenderFns = _compile2.staticRenderFns,
        errors = _compile2.errors;

    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('attrs:{"append":"node"}'));
    expect(errors).toEqual([]);
  });

  it('add append="tree" on <header>', function () {
    var _compile3 = (0, _weexTemplateCompiler.compile)('<list><header></header></list>'),
        render = _compile3.render,
        staticRenderFns = _compile3.staticRenderFns,
        errors = _compile3.errors;

    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('appendAsTree:true'));
    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('attrs:{"append":"tree"}'));
    expect(errors).toEqual([]);
  });

  it('add append="tree" on <recycle-list>', function () {
    var _compile4 = (0, _weexTemplateCompiler.compile)('<recycle-list for="item in list"><div></div></recycle-list>'),
        render = _compile4.render,
        staticRenderFns = _compile4.staticRenderFns,
        errors = _compile4.errors;

    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('appendAsTree:true'));
    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('"append":"tree"'));
    expect(errors).toEqual([]);
  });

  it('add append="tree" on <cell-slot>', function () {
    var _compile5 = (0, _weexTemplateCompiler.compile)('<list><cell-slot></cell-slot></list>'),
        render = _compile5.render,
        staticRenderFns = _compile5.staticRenderFns,
        errors = _compile5.errors;

    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('appendAsTree:true'));
    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('attrs:{"append":"tree"}'));
    expect(errors).toEqual([]);
  });

  it('override append="node" on <cell-slot>', function () {
    var _compile6 = (0, _weexTemplateCompiler.compile)('<list><cell-slot append="node"></cell-slot></list>'),
        render = _compile6.render,
        staticRenderFns = _compile6.staticRenderFns,
        errors = _compile6.errors;

    expect(render + staticRenderFns).toMatch((0, _index.strToRegExp)('attrs:{"append":"node"}'));
    expect(errors).toEqual([]);
  });
});

