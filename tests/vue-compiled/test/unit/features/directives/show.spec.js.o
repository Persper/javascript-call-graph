'use strict';

var _vue = require('vue');

var _vue2 = _interopRequireDefault(_vue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Directive v-show', function () {
  it('should check show value is truthy', function () {
    var vm = new _vue2.default({
      template: '<div><span v-show="foo">hello</span></div>',
      data: { foo: true }
    }).$mount();
    expect(vm.$el.firstChild.style.display).toBe('');
  });

  it('should check show value is falsy', function () {
    var vm = new _vue2.default({
      template: '<div><span v-show="foo">hello</span></div>',
      data: { foo: false }
    }).$mount();
    expect(vm.$el.firstChild.style.display).toBe('none');
  });

  it('should update show value changed', function (done) {
    var vm = new _vue2.default({
      template: '<div><span v-show="foo">hello</span></div>',
      data: { foo: true }
    }).$mount();
    expect(vm.$el.firstChild.style.display).toBe('');
    vm.foo = false;
    waitForUpdate(function () {
      expect(vm.$el.firstChild.style.display).toBe('none');
      vm.foo = {};
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('');
      vm.foo = 0;
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('none');
      vm.foo = [];
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('');
      vm.foo = null;
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('none');
      vm.foo = '0';
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('');
      vm.foo = undefined;
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('none');
      vm.foo = 1;
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('');
    }).then(done);
  });

  it('should respect display value in style attribute', function (done) {
    var vm = new _vue2.default({
      template: '<div><span v-show="foo" style="display:block">hello</span></div>',
      data: { foo: true }
    }).$mount();
    expect(vm.$el.firstChild.style.display).toBe('block');
    vm.foo = false;
    waitForUpdate(function () {
      expect(vm.$el.firstChild.style.display).toBe('none');
      vm.foo = true;
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('block');
    }).then(done);
  });

  it('should support unbind when reused', function (done) {
    var vm = new _vue2.default({
      template: '<div v-if="tester"><span v-show="false"></span></div>' + '<div v-else><span @click="tester=!tester">show</span></div>',
      data: { tester: true }
    }).$mount();
    expect(vm.$el.firstChild.style.display).toBe('none');
    vm.tester = false;
    waitForUpdate(function () {
      expect(vm.$el.firstChild.style.display).toBe('');
      vm.tester = true;
    }).then(function () {
      expect(vm.$el.firstChild.style.display).toBe('none');
    }).then(done);
  });
});

