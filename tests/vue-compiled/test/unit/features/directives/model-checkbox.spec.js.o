'use strict';

var _vue = require('vue');

var _vue2 = _interopRequireDefault(_vue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Directive v-model checkbox', function () {
  it('should work', function (done) {
    var vm = new _vue2.default({
      data: {
        test: true
      },
      template: '<input type="checkbox" v-model="test">'
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.checked).toBe(true);
    vm.test = false;
    waitForUpdate(function () {
      expect(vm.$el.checked).toBe(false);
      expect(vm.test).toBe(false);
      vm.$el.click();
      expect(vm.$el.checked).toBe(true);
      expect(vm.test).toBe(true);
    }).then(function () {
      document.body.removeChild(vm.$el);
    }).then(done);
  });

  it('should respect value bindings', function (done) {
    var vm = new _vue2.default({
      data: {
        test: 1,
        a: 1,
        b: 2
      },
      template: '<input type="checkbox" v-model="test" :true-value="a" :false-value="b">'
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.checked).toBe(true);
    vm.$el.click();
    expect(vm.$el.checked).toBe(false);
    expect(vm.test).toBe(2);
    vm.$el.click();
    expect(vm.$el.checked).toBe(true);
    expect(vm.test).toBe(1);
    vm.test = 2;
    waitForUpdate(function () {
      expect(vm.$el.checked).toBe(false);
      vm.test = 1;
    }).then(function () {
      expect(vm.$el.checked).toBe(true);
      document.body.removeChild(vm.$el);
    }).then(done);
  });

  it('bind to Array value', function (done) {
    var vm = new _vue2.default({
      data: {
        test: ['1']
      },
      template: '\n        <div>\n          <input type="checkbox" v-model="test" value="1">\n          <input type="checkbox" v-model="test" value="2">\n        </div>\n      '
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.children[0].checked).toBe(true);
    expect(vm.$el.children[1].checked).toBe(false);
    vm.$el.children[0].click();
    expect(vm.test.length).toBe(0);
    vm.$el.children[1].click();
    expect(vm.test).toEqual(['2']);
    vm.$el.children[0].click();
    expect(vm.test).toEqual(['2', '1']);
    vm.test = ['1'];
    waitForUpdate(function () {
      expect(vm.$el.children[0].checked).toBe(true);
      expect(vm.$el.children[1].checked).toBe(false);
    }).then(done);
  });

  it('bind to Array value ignores false-value', function (done) {
    var vm = new _vue2.default({
      data: {
        test: ['1']
      },
      template: '\n        <div>\n          <input type="checkbox" v-model="test" value="1" :false-value="true">\n          <input type="checkbox" v-model="test" value="2" :false-value="true">\n        </div>\n      '
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.children[0].checked).toBe(true);
    expect(vm.$el.children[1].checked).toBe(false);
    vm.$el.children[0].click();
    expect(vm.test.length).toBe(0);
    vm.$el.children[1].click();
    expect(vm.test).toEqual(['2']);
    vm.$el.children[0].click();
    expect(vm.test).toEqual(['2', '1']);
    vm.test = ['1'];
    waitForUpdate(function () {
      expect(vm.$el.children[0].checked).toBe(true);
      expect(vm.$el.children[1].checked).toBe(false);
    }).then(done);
  });

  it('bind to Array value with value bindings', function (done) {
    var vm = new _vue2.default({
      data: {
        test: [1]
      },
      template: '\n        <div>\n          <input type="checkbox" v-model="test" :value="1">\n          <input type="checkbox" v-model="test" :value="2">\n        </div>\n      '
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.children[0].checked).toBe(true);
    expect(vm.$el.children[1].checked).toBe(false);
    vm.$el.children[0].click();
    expect(vm.test.length).toBe(0);
    vm.$el.children[1].click();
    expect(vm.test).toEqual([2]);
    vm.$el.children[0].click();
    expect(vm.test).toEqual([2, 1]);
    vm.test = [1];
    waitForUpdate(function () {
      expect(vm.$el.children[0].checked).toBe(true);
      expect(vm.$el.children[1].checked).toBe(false);
    }).then(done);
  });

  it('bind to Array value with value bindings (object loose equal)', function (done) {
    var vm = new _vue2.default({
      data: {
        test: [{ a: 1 }]
      },
      template: '\n        <div>\n          <input type="checkbox" v-model="test" :value="{ a: 1 }">\n          <input type="checkbox" v-model="test" :value="{ a: 2 }">\n        </div>\n      '
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.children[0].checked).toBe(true);
    expect(vm.$el.children[1].checked).toBe(false);
    vm.$el.children[0].click();
    expect(vm.test.length).toBe(0);
    vm.$el.children[1].click();
    expect(vm.test).toEqual([{ a: 2 }]);
    vm.$el.children[0].click();
    expect(vm.test).toEqual([{ a: 2 }, { a: 1 }]);
    vm.test = [{ a: 1 }];
    waitForUpdate(function () {
      expect(vm.$el.children[0].checked).toBe(true);
      expect(vm.$el.children[1].checked).toBe(false);
    }).then(done);
  });

  it('bind to Array value with array value bindings (object loose equal)', function (done) {
    var vm = new _vue2.default({
      data: {
        test: [{ a: 1 }]
      },
      template: '\n        <div>\n          <input type="checkbox" v-model="test" :value="{ a: 1 }">\n          <input type="checkbox" v-model="test" :value="[2]">\n        </div>\n      '
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.children[0].checked).toBe(true);
    expect(vm.$el.children[1].checked).toBe(false);
    vm.$el.children[0].click();
    expect(vm.test.length).toBe(0);
    vm.$el.children[1].click();
    expect(vm.test).toEqual([[2]]);
    vm.$el.children[0].click();
    expect(vm.test).toEqual([[2], { a: 1 }]);
    vm.test = [{ a: 1 }];
    waitForUpdate(function () {
      expect(vm.$el.children[0].checked).toBe(true);
      expect(vm.$el.children[1].checked).toBe(false);
    }).then(done);
  });

  it('.number modifier', function () {
    var vm = new _vue2.default({
      data: {
        test: [],
        check: true
      },
      template: '\n        <div>\n          <input type="checkbox" v-model.number="test" value="1">\n          <input type="checkbox" v-model="test" value="2">\n          <input type="checkbox" v-model.number="check">\n        </div>\n      '
    }).$mount();
    document.body.appendChild(vm.$el);
    var checkboxInputs = vm.$el.getElementsByTagName('input');
    expect(checkboxInputs[0].checked).toBe(false);
    expect(checkboxInputs[1].checked).toBe(false);
    expect(checkboxInputs[2].checked).toBe(true);
    checkboxInputs[0].click();
    checkboxInputs[1].click();
    checkboxInputs[2].click();
    expect(vm.test).toEqual([1, '2']);
    expect(vm.check).toEqual(false);
  });

  it('should respect different primitive type value', function (done) {
    var vm = new _vue2.default({
      data: {
        test: [0]
      },
      template: '<div>' + '<input type="checkbox" value="" v-model="test">' + '<input type="checkbox" value="0" v-model="test">' + '<input type="checkbox" value="1" v-model="test">' + '<input type="checkbox" value="false" v-model="test">' + '<input type="checkbox" value="true" v-model="test">' + '</div>'
    }).$mount();
    var checkboxInput = vm.$el.children;
    expect(checkboxInput[0].checked).toBe(false);
    expect(checkboxInput[1].checked).toBe(true);
    expect(checkboxInput[2].checked).toBe(false);
    expect(checkboxInput[3].checked).toBe(false);
    expect(checkboxInput[4].checked).toBe(false);
    vm.test = [1];
    waitForUpdate(function () {
      expect(checkboxInput[0].checked).toBe(false);
      expect(checkboxInput[1].checked).toBe(false);
      expect(checkboxInput[2].checked).toBe(true);
      expect(checkboxInput[3].checked).toBe(false);
      expect(checkboxInput[4].checked).toBe(false);
      vm.test = [''];
    }).then(function () {
      expect(checkboxInput[0].checked).toBe(true);
      expect(checkboxInput[1].checked).toBe(false);
      expect(checkboxInput[2].checked).toBe(false);
      expect(checkboxInput[3].checked).toBe(false);
      expect(checkboxInput[4].checked).toBe(false);
      vm.test = [false];
    }).then(function () {
      expect(checkboxInput[0].checked).toBe(false);
      expect(checkboxInput[1].checked).toBe(false);
      expect(checkboxInput[2].checked).toBe(false);
      expect(checkboxInput[3].checked).toBe(true);
      expect(checkboxInput[4].checked).toBe(false);
      vm.test = [true];
    }).then(function () {
      expect(checkboxInput[0].checked).toBe(false);
      expect(checkboxInput[1].checked).toBe(false);
      expect(checkboxInput[2].checked).toBe(false);
      expect(checkboxInput[3].checked).toBe(false);
      expect(checkboxInput[4].checked).toBe(true);
      vm.test = ['', 0, 1, false, true];
    }).then(function () {
      expect(checkboxInput[0].checked).toBe(true);
      expect(checkboxInput[1].checked).toBe(true);
      expect(checkboxInput[2].checked).toBe(true);
      expect(checkboxInput[3].checked).toBe(true);
      expect(checkboxInput[4].checked).toBe(true);
    }).then(done);
  });

  // #4521
  it('should work with click event', function (done) {
    var vm = new _vue2.default({
      data: {
        num: 1,
        checked: false
      },
      template: '<div @click="add">click {{ num }}<input ref="checkbox" type="checkbox" v-model="checked"/></div>',
      methods: {
        add: function add() {
          this.num++;
        }
      }
    }).$mount();
    document.body.appendChild(vm.$el);
    var checkbox = vm.$refs.checkbox;
    checkbox.click();
    waitForUpdate(function () {
      expect(checkbox.checked).toBe(true);
      expect(vm.num).toBe(2);
    }).then(done);
  });

  it('should get updated with model when in focus', function (done) {
    var vm = new _vue2.default({
      data: {
        a: 2
      },
      template: '<input type="checkbox" v-model="a"/>'
    }).$mount();
    document.body.appendChild(vm.$el);
    vm.$el.click();
    waitForUpdate(function () {
      expect(vm.$el.checked).toBe(false);
      vm.a = 2;
    }).then(function () {
      expect(vm.$el.checked).toBe(true);
    }).then(done);
  });

  it('triggers a watcher when binding to an array value in a checkbox', function (done) {
    var vm = new _vue2.default({
      data: {
        test: {
          thing: false,
          arr: [true]
        }
      },
      template: '\n        <div>\n          <input type="checkbox" v-model="test.arr[0]">\n          <span>{{ test.arr[0] }}</span>\n        </div>\n      '
    }).$mount();
    document.body.appendChild(vm.$el);
    expect(vm.$el.children[0].checked).toBe(true);
    expect(vm.$el.children[1].textContent).toBe('true');
    vm.$el.children[0].click();
    expect(vm.$el.children[0].checked).toBe(false);
    waitForUpdate(function () {
      expect(vm.$el.children[1].textContent).toBe('false');
    }).then(done);
  });
});

