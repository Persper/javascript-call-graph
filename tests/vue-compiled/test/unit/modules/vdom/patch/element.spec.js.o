'use strict';

var _vue = require('vue');

var _vue2 = _interopRequireDefault(_vue);

var _patch = require('web/runtime/patch');

var _vnode = require('core/vdom/vnode');

var _vnode2 = _interopRequireDefault(_vnode);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('vdom patch: element', function () {
  it('should create an element', function () {
    var vnode = new _vnode2.default('p', { attrs: { id: '1' } }, [createTextVNode('hello world')]);
    var elm = (0, _patch.patch)(null, vnode);
    expect(elm.tagName).toBe('P');
    expect(elm.outerHTML).toBe('<p id="1">hello world</p>');
  });

  it('should create an element which having the namespace', function () {
    var vnode = new _vnode2.default('svg', {});
    vnode.ns = 'svg';
    var elm = (0, _patch.patch)(null, vnode);
    expect(elm.namespaceURI).toBe('http://www.w3.org/2000/svg');
  });

  var el = document.createElement('unknown');
  // Android Browser <= 4.2 doesn't use correct class name,
  // but it doesn't matter because no one's gonna use it as their primary
  // development browser.
  if (/HTMLUnknownElement/.test(el.toString())) {
    it('should warn unknown element', function () {
      var vnode = new _vnode2.default('unknown');
      (0, _patch.patch)(null, vnode);
      expect('Unknown custom element: <unknown>').toHaveBeenWarned();
    });
  }

  it('should warn unknown element with hyphen', function () {
    var vnode = new _vnode2.default('unknown-foo');
    (0, _patch.patch)(null, vnode);
    expect('Unknown custom element: <unknown-foo>').toHaveBeenWarned();
  });

  it('should create an elements which having text content', function () {
    var vnode = new _vnode2.default('div', {}, [createTextVNode('hello world')]);
    var elm = (0, _patch.patch)(null, vnode);
    expect(elm.innerHTML).toBe('hello world');
  });

  it('should create create an elements which having span and text content', function () {
    var vnode = new _vnode2.default('div', {}, [new _vnode2.default('span'), createTextVNode('hello world')]);
    var elm = (0, _patch.patch)(null, vnode);
    expect(elm.childNodes[0].tagName).toBe('SPAN');
    expect(elm.childNodes[1].textContent).toBe('hello world');
  });

  it('should create element with scope attribute', function () {
    var vnode = new _vnode2.default('div');
    vnode.context = new _vue2.default({ _scopeId: 'foo' });
    var elm = (0, _patch.patch)(null, vnode);
    expect(elm.hasAttribute('foo')).toBe(true);
  });
});

